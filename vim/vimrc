" Better safe than sorry
set nocompatible

" ============================================================================
" VIM-PLUG
" ============================================================================

if filereadable(expand("$DOTFILES/vim/bundles"))
  source $DOTFILES/vim/bundles
endif

" ============================================================================
" THEME
" ============================================================================

" ----------------------------------------------------------------------------
" Solarized light
" ----------------------------------------------------------------------------
set background=light
colorscheme solarized
let g:airline_theme='solarized'

" Allow color schemes to do bright colors without forcing bold
set t_Co=16

" ============================================================================
" BASIC SETTINGS
" ============================================================================

let mapleader = ' '

" Copy indent from current line when starting a new line
set autoindent

" Backspace deletes like most programs in insert mode
set backspace=2

" Highlight current line
set cursorline

" Do incremental searching
set incsearch

" https://github.com/bling/vim-airline/wiki/FAQ#vim-airline-doesnt-appear-until-i-create-a-new-split
set laststatus=2

" Switch off automatic creation of backup files
set nobackup
set nowritebackup

" Get rid of default mode indicator - using airline's instead
set noshowmode

" http://robots.thoughtbot.com/post/18739402579/global-gitignore#comment-458413287
set noswapfile

" Line numbers
set number
set numberwidth=5

" Show the cursor position all the time
set ruler

" Display incomplete commands
set showcmd

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab

" Draw a vertical line to encourage wrapping the text at 80 chars
set textwidth=80
set colorcolumn=+1

" Enable color syntax highlighting
syntax enable

" ============================================================================
" TEXT WRAPP AND SPELL CHECK
" ============================================================================

" ----------------------------------------------------------------------------
" Git commit
" ----------------------------------------------------------------------------
autocmd FileType gitcommit setlocal textwidth=72
autocmd FileType gitcommit setlocal spell

" ----------------------------------------------------------------------------
" Markdown
" ----------------------------------------------------------------------------
autocmd BufRead,BufNewFile *.md setlocal textwidth=80
autocmd FileType markdown setlocal spell

" ============================================================================
" FILE TYPES
" ============================================================================

" ----------------------------------------------------------------------------
" CoffeeScript
" ----------------------------------------------------------------------------
augroup filetype_coffee
  autocmd!
  " Folding is disabled by default but can be quickly toggled per-file by
  " hitting <z>-<i>
  au BufNewFile,BufReadPost *.coffee setl foldmethod=indent nofoldenable

 " Standard two-space indentation
  au BufNewFile,BufReadPost *.coffee setl shiftwidth=2 expandtab
augroup END

" ============================================================================
" PLUGINS
" ============================================================================

" ----------------------------------------------------------------------------
" Airline
" ----------------------------------------------------------------------------
" Note: The airline theme is defined on the top of this file under "THEME"
" section.
augroup ailine_config
  autocmd!
  let g:airline_powerline_fonts=1
  let g:airline#extensions#syntastic#enabled = 1
  let g:airline#extensions#tabline#buffer_nr_format = '%s '
  let g:airline#extensions#tabline#buffer_nr_show = 1
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#fnamecollapse = 0
  let g:airline#extensions#tabline#fnamemod = ':t'
augroup END

" ----------------------------------------------------------------------------
" Gitgutter
" ----------------------------------------------------------------------------
augroup gitgutter_config
  autocmd!
  let g:gitgutter_sign_added = '✚'
  let g:gitgutter_sign_modified = '✹'
  let g:gitgutter_sign_removed = '✖'
  let g:gitgutter_sign_removed_first_line = '➜'
  let g:gitgutter_sign_modified_removed = '✗'
augroup END

" ----------------------------------------------------------------------------
" Syntastic
" ----------------------------------------------------------------------------
augroup syntastic_config
  autocmd!
  "let g:syntastic_always_populate_loc_list = 1
  "let g:syntastic_auto_loc_list = 1
  let g:syntastic_check_on_wq = 0
  let g:syntastic_error_symbol = '✗'
  let g:syntastic_style_error_symbol = '✗'
  let g:syntastic_warning_symbol = '⚠'
  let g:syntastic_style_warning_symbol = '⚠'
  let g:syntastic_ruby_checkers = ['reek', 'rubocop']
  let g:syntastic_coffee_checkers = ['coffeelint', 'coffee']
augroup END

" ============================================================================
" MAPPINGS
" ============================================================================

" ----------------------------------------------------------------------------
" Basic mappings
" ----------------------------------------------------------------------------

" Fix code identation.
map <F7> mzgg=G`z

" Highlight all instances of word under cursor. Use <S-*> to move to the next
" occurence.
map <F2> :noh<CR>

" Look for files under current directory
map <C-p> :FZF<CR>

" ----------------------------------------------------------------------------
" Tab navigation
" ----------------------------------------------------------------------------

" Navigate Vim style
nnoremap th :tabfirst<CR>
nnoremap tj :tabnext<CR>
nnoremap tk :tabprevious<CR>
nnoremap tl :tablast<CR>
nnoremap tn :tabnext<CR>

" Open tabpage after the last one
nnoremap tn :$tabnew<CR>

" Close current tab
nnoremap td :tabclose<CR>

" Go to the nth tabpage
nnoremap t1 1gt
nnoremap t2 2gt
nnoremap t3 3gt
nnoremap t4 4gt
nnoremap t5 5gt
nnoremap t6 6gt
nnoremap t7 7gt
nnoremap t8 8gt
nnoremap t9 9gt
nnoremap t0 10gt

autocmd VimEnter * tab all
"autocmd BufAdd * exe 'tablast | tabe "' . expand( "<afile") .'"'

" ============================================================================
" LOCAL CUSTOMIZATION
" ============================================================================

if filereadable(expand("~/.vimrc.local"))
  source ~/.vimrc.local
endif
