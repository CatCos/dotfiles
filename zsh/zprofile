# Paths
path=(
  /usr/local/opt/coreutils/libexec/gnubin
  $DOTFILES/bin
  /usr/local/bin
  /usr/{sbin,bin}
  /{sbin,bin}
)

cdpath=(
  $HOME
  $HOME/code
  $HOME/code/work
  $HOME/Downloads
)

fpath=(
  /usr/local/share/zsh-completions
  $fpath
)

manpath=(
  /usr/local/opt/coreutils/libexec/gnuman
)

# Ensure path arrays do not contain duplicates.
typeset -gU path cdpath fpath manpath

# load rbenv if available
if command -v rbenv >/dev/null; then
  eval "$(rbenv init - --no-rehash)"
fi

# load nodenv if available
if command -v nodenv >/dev/null; then
  eval "$(nodenv init -)"
fi

# In order for gpg to find gpg-agent, gpg-agent must be running, and there must
# be an env variable pointing GPG to the gpg-agent socket. The following will
# either start gpg-agent or set up the GPG_AGENT_INFO variable if it's already
# running.
if [[ -f ~/.gnupg/.gpg-agent-info ]] && [[ -n "$(pgrep gpg-agent)" ]]; then
  source ~/.gnupg/.gpg-agent-info
  export GPG_AGENT_INFO
else
  eval $(gpg-agent --daemon --write-env-file ~/.gnupg/.gpg-agent-info)
fi

# vim: ft=zsh sw=2 ts=2 et
